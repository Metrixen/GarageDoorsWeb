@page
@model global::GarageDoorsWeb.Pages.LoginModel
@{
    ViewData["Title"] = "Login";
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <!-- Include Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <h2 class="mb-4">Login</h2>

                <div id="error-message" class="alert alert-danger" style="display: none;"></div>

                <!-- Login Form -->
                <form id="loginForm">
                    <div class="form-group">
                        <label for="username">Username</label>
                        <input type="text" class="form-control" id="username" name="username" required>
                    </div>
                    <div class="form-group">
                        <label for="password">Password</label>
                        <input type="password" class="form-control" id="password" name="password" required>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="login()">Login</button>
                </form>
                <!-- End Login Form -->
            </div>
        </div>
    </div>

    <script>
        function login() {
            var username = document.getElementById("username").value;
            var password = document.getElementById("password").value;

            fetch('/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: `username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`
            })
                .then(response => {
                    if (!response.ok) {
                        return response.text().then(text => { throw new Error(text) });
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Server response:', data); // Add logging

                    // Redirect to the desired page
                    if (data.redirectUrl) {
                        window.location.href = data.redirectUrl;
                    } else {
                        alert('Login successful, but no redirect URL provided.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error); // Add logging
                    var errorMessage = document.getElementById("error-message");
                    errorMessage.textContent = error.message || 'Login failed!';
                    errorMessage.style.display = 'block';
                });
        }

        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
        }

        function authenticatedRequest(url, options = {}) {
            const token = getCookie('jwt');
            if (!options.headers) {
                options.headers = {};
            }
            options.headers['Authorization'] = `Bearer ${token}`;
            return fetch(url, options);
        }

                // Example usage:
                // document.addEventListener('DOMContentLoaded', () => {
                //     authenticatedRequest('/protected-endpoint', {
                //         method: 'GET'
                //     }).then(response => {
                //         if (!response.ok) {
                //             throw new Error('Failed to fetch protected resource');
                //         }
                //         return response.json();
                //     }).then(data => {
                //         console.log(data);
                //     }).catch(error => {
                //         console.error('Error:', error);
                //     });
                // });
    </script>
</body>
</html>
